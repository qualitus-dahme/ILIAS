/**
 * This file is part of ILIAS, a powerful learning management system
 * published by ILIAS open source e-Learning e.V.
 *
 * ILIAS is licensed with the GPL-3.0,
 * see https://www.gnu.org/licenses/gpl-3.0.en.html
 * You should have received a copy of said license along with the
 * source code, too.
 *
 * If this is not the case or you just want to try ILIAS, you'll find
 * us at:
 * https://www.ilias.de
 * https://github.com/ILIAS-eLearning
 */
!function(e,t){"use strict";const n=new class{#e;constructor(e){this.#e=e}dispatch(e,t,n){this.#e(e).trigger(t,n)}register(e,t,n){this.#e(e).on(t,n)}}(t);e.UI=e.UI||{},e.UI.Input=e.UI.Input||{},e.UI.Input.Viewcontrols=e.UI.Input.Viewcontrols||{},e.UI.Input.Viewcontrols.FieldSelection=new class{#t;constructor(e){this.#t=e}init(e,t,n,i){this.#t.register(e.ownerDocument,t,(t=>{const r=t.target.closest(".il-viewcontrol-fieldselection"),o=r.querySelectorAll("input[type=checkbox]"),s=r.querySelector(".il-viewcontrol-value"),c=Object.values(o).map((e=>e.checked?e.value:""));return s.innerHTML="",c.forEach((t=>{const n=e.ownerDocument.createElement("input");n.type="hidden",n.name=`${i}[]`,n.value=t,s.appendChild(n)})),this.#t.dispatch(t.target,n),!1}))}}(n),e.UI.Input.Viewcontrols.Sortation=new class{#t;constructor(e){this.#t=e}init(e,t,n){this.#t.register(e.ownerDocument,t,((t,i)=>{let r=t.target.closest(".il-viewcontrol-fieldselection");r=i.options.parent_container?e.ownerDocument.querySelector(`#${i.options.parent_container} .il-viewcontrol-sortation`):t.target.closest(".il-viewcontrol-sortation");const o=r.querySelectorAll(".il-viewcontrol-value > input"),s=i.options.value.split(":");return[o[0].value,o[1].value]=s,this.#t.dispatch(t.target,n),!1}))}}(n),e.UI.Input.Viewcontrols.Pagination=new class{#t;constructor(e){this.#t=e}init(e,t,n){this.#t.register(e.ownerDocument,t,((e,t)=>{const i=e.target.closest(".il-viewcontrol-pagination").querySelectorAll(".il-viewcontrol-value input");return i[0].value=t.options.offset,i[1].value=t.options.limit,this.#t.dispatch(e.target,n),!1}))}}(n),e.UI.Input.Viewcontrols.Mode=new class{#t;constructor(e){this.#t=e}init(e,t,n){e.addEventListener("click",(e=>{const i=e.target;return i.parentElement.querySelectorAll("button").forEach((e=>e.classList.remove("engaged"))),i.classList.add("engaged"),i.closest(".il-viewcontrol").querySelector(".il-viewcontrol-value > input").value=t,this.#t.dispatch(e.target,n),!1}))}}(n)}(il,$);
